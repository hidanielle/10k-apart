@import 'reset';

// Functions

@function calculateRem($size) {
  $remSize: $size / 16px;
  @return #{$remSize}rem;
}

@mixin fontSize($size) {
  font-size: $size;
  font-size: calculateRem($size);
}


body {
  background-color: #E6E1C5;
}


// Helpers

%_accessible-invisible {
  clip: rect(1px, 1px, 1px, 1px);
  height: 1px;
  margin: 0;
  overflow: hidden;
  position: absolute;
  width: 1px;
}
._sr { @extend %_accessible-invisible; }


// Components


.game-box {
  width: 100%;
  max-width: 50rem;
  margin: 0 auto;
  background-color: white;
  border: 20px solid #D4CB92;
}

.game-row {
  &:not(:last-of-type) {
    .game-card {
      border-bottom: .5em solid #D4CB92;
    }
  }
}

.game-card {
  position: relative;
  width: 33.333%;
  padding-bottom: 33.333%;
  float: left;

  &:not(:last-child) {
    border-right: .5em solid #D4CB92;
  }
}

label.x,
label.o {
  position: absolute;
  width: 20%;
  cursor: pointer;
  z-index: 2;
  transition: width 600ms cubic-bezier(0.68, -0.55, 0.265, 1.55);
  .shape {
    transition: stroke-width .2s ease;
  }
  &:hover {
    .shape {
      stroke-width: 10;
    }
  }
}

label.x {
  top: 0;
  left: 0;
}

label.o {
  bottom: 0;
  right: 0;
}

input[type="radio"] {
  &:focus {
    + label .shape {
      stroke-width: 10;
    }
  }
  &:checked {
    + label {
      z-index: 1;
      width: 100%;
    }
  }
  &:not(:checked) {
    opacity: 0;
    width: 2em;
  }
}