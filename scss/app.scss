@import 'reset';

// Functions

@function calculateRem($size) {
  $remSize: $size / 16px;
  @return #{$remSize}rem;
}

@mixin fontSize($size) {
  font-size: $size;
  font-size: calculateRem($size);
}


body {
  background-color: #E6E1C5;
  font-family: Arial, sans-serif;
}

header {
  text-align: center;
  margin: 2rem auto;
  width: 90%;
  max-width: 50rem;
}

h1 {
  font-size: 3rem;
  color: indianred;
  font-family: courier;
  font-weight: bold;
}

p {
  margin-bottom: 1rem;
  line-height: 1.3;
  color: darkslategrey;
}

b {
  font-weight: bold;
  text-transform: uppercase;
}


// Helpers

%_accessible-invisible {
  clip: rect(1px, 1px, 1px, 1px);
  height: 1px;
  margin: 0;
  overflow: hidden;
  position: absolute;
  width: 1px;
}
._sr { @extend %_accessible-invisible; }


// Components

#win {
  visibility: hidden;
  opacity: 0;
  display: flex;
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  background-color: rgba(255,255,255,0.8);
  z-index: 3;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  transition: visibility 0s linear .5s, opacity 100ms linear .5s;
  strong {
    font-size: 3rem;
    font-family: courier;
    color: cadetblue;
    span {
      vertical-align: middle;
      font-family: Arial, sans-serif;
      font-size: 7rem;
    }
  }
}


.game-box {
  overflow: hidden;
  position: relative;
  width: 90%;
  max-width: 50rem;
  margin: 0 auto;
  background-color: white;
  border: .5em solid #D4CB92;
}

.game-row {
  &:not(:last-of-type) {
    .game-card {
      border-bottom: .5em solid #D4CB92;
    }
  }
}

.game-card {
  position: relative;
  width: 33.333%;
  padding-bottom: 33.333%;
  float: left;

  &:not(:last-child) {
    border-right: .5em solid #D4CB92;
  }
}

label.x,
label.o {
  position: absolute;
  width: 20%;
  height: 20%;
  cursor: pointer;
  z-index: 2;
  transition: all 600ms cubic-bezier(0.68, -0.55, 0.265, 1.55);
  svg {
    width: 100%;
    height: 100%;
  }
  .shape {
    transition: stroke-width .2s ease;
  }
  &:hover {
    .shape {
      stroke-width: 10;
    }
  }
}

label.x {
  top: 0;
  left: 0;
}

label.o {
  bottom: 0;
  right: 0;
}

input[type="radio"] {
  &:focus {
    + label .shape {
      stroke-width: 10;
    }
  }
  &:checked {
    + label {
      z-index: 1;
      width: 100%;
      height: 100%;
    }
  }
  &:not(:checked) {
    opacity: 0;
    width: 2em;
  }
}

@media (min-width: 700px) {
  h1 {
    font-size: 6rem;
  }
  .game-box {
    border-width: 1.1em;
  }
}